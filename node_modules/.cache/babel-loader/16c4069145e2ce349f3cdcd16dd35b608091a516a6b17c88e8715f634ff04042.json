{"ast":null,"code":"var _jsxFileName = \"/home/devbox/project/src/components/features/workspace/file-editor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// 定义组件接口\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/**\n * 文件编辑器组件\n * \n * 用于显示和编辑当前选中文件的内容\n */\nconst FileEditor = ({\n  currentFile,\n  fileContents,\n  onContentChange\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [content, setContent] = useState('');\n\n  // 当当前文件变化时，更新编辑器内容\n  useEffect(() => {\n    if (currentFile && fileContents[currentFile] !== undefined) {\n      setContent(fileContents[currentFile]);\n    } else {\n      setContent('');\n    }\n  }, [currentFile, fileContents]);\n  const handleContentChange = e => {\n    const newContent = e.target.value;\n    setContent(newContent);\n    onContentChange(currentFile, newContent);\n  };\n\n  // 根据文件类型渲染不同的编辑器视图\n  const renderEditor = () => {\n    // 如果是Markdown文件，可以添加预览功能等\n    if (currentFile.endsWith('.md') || currentFile.endsWith('.txt')) {\n      return /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full h-full p-4 font-mono bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 resize-none focus:outline-none\",\n        value: content,\n        onChange: handleContentChange,\n        spellCheck: \"false\",\n        \"aria-label\": t('workspace.fileContent')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    }\n    // 如果是JSON文件，可以添加格式化功能\n    if (currentFile.endsWith('.json')) {\n      return /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full h-full p-4 font-mono bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 resize-none focus:outline-none\",\n        value: content,\n        onChange: handleContentChange,\n        spellCheck: \"false\",\n        \"aria-label\": t('workspace.fileContent')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n\n    // 默认编辑器\n    return /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full h-full p-4 font-mono bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 resize-none focus:outline-none\",\n      value: content,\n      onChange: handleContentChange,\n      spellCheck: \"false\",\n      \"aria-label\": t('workspace.fileContent')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: currentFile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b border-gray-200 dark:border-gray-700 px-4 py-2 flex items-center justify-between\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-sm font-medium\",\n          children: currentFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-auto\",\n        children: renderEditor()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full text-gray-500\",\n      children: t('workspace.noFileSelected')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(FileEditor, \"9SK5YtvQO2hf6+Gyazccd5Q38DI=\", false, function () {\n  return [useTranslation];\n});\n_c = FileEditor;\nexport default FileEditor;\nvar _c;\n$RefreshReg$(_c, \"FileEditor\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","jsxDEV","_jsxDEV","Fragment","_Fragment","FileEditor","currentFile","fileContents","onContentChange","_s","t","content","setContent","undefined","handleContentChange","e","newContent","target","value","renderEditor","endsWith","className","onChange","spellCheck","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/devbox/project/src/components/features/workspace/file-editor.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// 定义组件接口\ninterface FileEditorProps {\n  currentFile: string;\n  fileContents: { [key: string]: string };\n  onContentChange: (fileName: string, content: string) => void;\n}\n\n/**\n * 文件编辑器组件\n * \n * 用于显示和编辑当前选中文件的内容\n */\nconst FileEditor: React.FC<FileEditorProps> = ({\n  currentFile,\n  fileContents,\n  onContentChange\n}) => {\n  const { t } = useTranslation();\n  const [content, setContent] = useState('');\n  \n  // 当当前文件变化时，更新编辑器内容\n  useEffect(() => {\n    if (currentFile && fileContents[currentFile] !== undefined) {\n      setContent(fileContents[currentFile]);\n    } else {\n      setContent('');\n    }\n  }, [currentFile, fileContents]);\n  \n  const handleContentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newContent = e.target.value;\n    setContent(newContent);\n    onContentChange(currentFile, newContent);\n  };\n  \n  // 根据文件类型渲染不同的编辑器视图\n  const renderEditor = () => {\n    // 如果是Markdown文件，可以添加预览功能等\n    if (currentFile.endsWith('.md') || currentFile.endsWith('.txt')) {\n      return (\n        <textarea\n          className=\"w-full h-full p-4 font-mono bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 resize-none focus:outline-none\"\n          value={content}\n          onChange={handleContentChange}\n          spellCheck=\"false\"\n          aria-label={t('workspace.fileContent')}\n        />\n      );\n    }\n    // 如果是JSON文件，可以添加格式化功能\n    if (currentFile.endsWith('.json')) {\n      return (\n        <textarea\n          className=\"w-full h-full p-4 font-mono bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 resize-none focus:outline-none\"\n          value={content}\n          onChange={handleContentChange}\n          spellCheck=\"false\"\n          aria-label={t('workspace.fileContent')}\n        />\n      );\n    }\n    \n    // 默认编辑器\n    return (\n      <textarea\n        className=\"w-full h-full p-4 font-mono bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 resize-none focus:outline-none\"\n        value={content}\n        onChange={handleContentChange}\n        spellCheck=\"false\"\n        aria-label={t('workspace.fileContent')}\n      />\n    );\n  };\n  \n  return (\n    <div className=\"h-full flex flex-col\">\n      {currentFile ? (\n        <>\n          <div className=\"border-b border-gray-200 dark:border-gray-700 px-4 py-2 flex items-center justify-between\">\n            <h2 className=\"text-sm font-medium\">{currentFile}</h2>\n          </div>\n          <div className=\"flex-1 overflow-auto\">\n            {renderEditor()}\n          </div>\n        </>\n      ) : (\n        <div className=\"flex items-center justify-center h-full text-gray-500\">\n          {t('workspace.noFileSelected')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FileEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}