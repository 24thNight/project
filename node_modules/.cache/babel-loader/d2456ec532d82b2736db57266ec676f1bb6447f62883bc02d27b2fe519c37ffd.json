{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { toast } from 'sonner';\nimport { useTranslation } from 'react-i18next';\n/**\n * 命令面板自定义钩子\n * \n * 用于管理命令面板状态和命令执行\n */\nexport const useCommandPalette = customCommands => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    t\n  } = useTranslation();\n\n  // 提供默认命令\n  const defaultCommands = [{\n    id: 'go-to-dashboard',\n    name: t('commands.goToDashboard'),\n    description: t('commands.goToDashboardDesc'),\n    action: () => {\n      window.location.href = '/dashboard';\n    }\n  }];\n\n  // 合并自定义命令和默认命令\n  const commands = [...(customCommands || []), ...defaultCommands];\n\n  // 执行命令\n  const executeCommand = commandId => {\n    const command = commands.find(cmd => cmd.id === commandId);\n    if (command) {\n      command.action();\n      setIsOpen(false);\n    } else {\n      toast.error(t('commands.commandNotFound'));\n    }\n  };\n\n  // 监听快捷键\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // 检查Cmd+K或Ctrl+K\n      if ((e.metaKey || e.ctrlKey) && e.key === 'k') {\n        e.preventDefault();\n        setIsOpen(true);\n      }\n\n      // ESC关闭面板\n      if (e.key === 'Escape' && isOpen) {\n        setIsOpen(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen]);\n  return {\n    isOpen,\n    setIsOpen,\n    commands,\n    executeCommand\n  };\n};\n_s(useCommandPalette, \"hRCypuRZVlD4Ho5x+L1cSeg5smU=\", false, function () {\n  return [useTranslation];\n});\nexport default useCommandPalette;","map":{"version":3,"names":["useState","useEffect","toast","useTranslation","useCommandPalette","customCommands","_s","isOpen","setIsOpen","t","defaultCommands","id","name","description","action","window","location","href","commands","executeCommand","commandId","command","find","cmd","error","handleKeyDown","e","metaKey","ctrlKey","key","preventDefault","addEventListener","removeEventListener"],"sources":["/home/devbox/project/src/lib/hooks/use-command-palette.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { toast } from 'sonner';\nimport { useTranslation } from 'react-i18next';\n\nexport interface Command {\n  id: string;\n  name: string;\n  description: string;\n  icon?: React.ReactNode;\n  action: () => void;\n}\n\n/**\n * 命令面板自定义钩子\n * \n * 用于管理命令面板状态和命令执行\n */\nexport const useCommandPalette = (customCommands?: Command[]) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { t } = useTranslation();\n  \n  // 提供默认命令\n  const defaultCommands: Command[] = [\n    {\n      id: 'go-to-dashboard',\n      name: t('commands.goToDashboard'),\n      description: t('commands.goToDashboardDesc'),\n      action: () => {\n        window.location.href = '/dashboard';\n      }\n    }\n  ];\n  \n  // 合并自定义命令和默认命令\n  const commands = [...(customCommands || []), ...defaultCommands];\n  \n  // 执行命令\n  const executeCommand = (commandId: string) => {\n    const command = commands.find(cmd => cmd.id === commandId);\n    if (command) {\n      command.action();\n      setIsOpen(false);\n    } else {\n      toast.error(t('commands.commandNotFound'));\n    }\n  };\n  \n  // 监听快捷键\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      // 检查Cmd+K或Ctrl+K\n      if ((e.metaKey || e.ctrlKey) && e.key === 'k') {\n        e.preventDefault();\n        setIsOpen(true);\n      }\n      \n      // ESC关闭面板\n      if (e.key === 'Escape' && isOpen) {\n        setIsOpen(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen]);\n  \n  return {\n    isOpen,\n    setIsOpen,\n    commands,\n    executeCommand\n  };\n};\n\nexport default useCommandPalette; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,QAAQ,QAAQ;AAC9B,SAASC,cAAc,QAAQ,eAAe;AAU9C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAIC,cAA0B,IAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM;IAAES;EAAE,CAAC,GAAGN,cAAc,CAAC,CAAC;;EAE9B;EACA,MAAMO,eAA0B,GAAG,CACjC;IACEC,EAAE,EAAE,iBAAiB;IACrBC,IAAI,EAAEH,CAAC,CAAC,wBAAwB,CAAC;IACjCI,WAAW,EAAEJ,CAAC,CAAC,4BAA4B,CAAC;IAC5CK,MAAM,EAAEA,CAAA,KAAM;MACZC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,YAAY;IACrC;EACF,CAAC,CACF;;EAED;EACA,MAAMC,QAAQ,GAAG,CAAC,IAAIb,cAAc,IAAI,EAAE,CAAC,EAAE,GAAGK,eAAe,CAAC;;EAEhE;EACA,MAAMS,cAAc,GAAIC,SAAiB,IAAK;IAC5C,MAAMC,OAAO,GAAGH,QAAQ,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACZ,EAAE,KAAKS,SAAS,CAAC;IAC1D,IAAIC,OAAO,EAAE;MACXA,OAAO,CAACP,MAAM,CAAC,CAAC;MAChBN,SAAS,CAAC,KAAK,CAAC;IAClB,CAAC,MAAM;MACLN,KAAK,CAACsB,KAAK,CAACf,CAAC,CAAC,0BAA0B,CAAC,CAAC;IAC5C;EACF,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACd,MAAMwB,aAAa,GAAIC,CAAgB,IAAK;MAC1C;MACA,IAAI,CAACA,CAAC,CAACC,OAAO,IAAID,CAAC,CAACE,OAAO,KAAKF,CAAC,CAACG,GAAG,KAAK,GAAG,EAAE;QAC7CH,CAAC,CAACI,cAAc,CAAC,CAAC;QAClBtB,SAAS,CAAC,IAAI,CAAC;MACjB;;MAEA;MACA,IAAIkB,CAAC,CAACG,GAAG,KAAK,QAAQ,IAAItB,MAAM,EAAE;QAChCC,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC;IAEDO,MAAM,CAACgB,gBAAgB,CAAC,SAAS,EAAEN,aAAa,CAAC;IACjD,OAAO,MAAMV,MAAM,CAACiB,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;EACnE,CAAC,EAAE,CAAClB,MAAM,CAAC,CAAC;EAEZ,OAAO;IACLA,MAAM;IACNC,SAAS;IACTU,QAAQ;IACRC;EACF,CAAC;AACH,CAAC;AAACb,EAAA,CAvDWF,iBAAiB;EAAA,QAEdD,cAAc;AAAA;AAuD9B,eAAeC,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}