{"ast":null,"code":"var _jsxFileName = \"/home/devbox/project/src/components/features/dashboard/api-test.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { planApi } from '../../../lib/api';\nimport { useLanguage } from '../../../lib/language-context';\nimport { Button } from '../../../components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiTest = () => {\n  _s();\n  const {\n    t,\n    language\n  } = useLanguage();\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const apiTests = [{\n    name: '获取计划列表',\n    action: async () => {\n      setLoading(true);\n      try {\n        const plans = await planApi.fetchPlans(language);\n        return JSON.stringify(plans, null, 2);\n      } catch (error) {\n        return `错误: ${error instanceof Error ? error.message : String(error)}`;\n      } finally {\n        setLoading(false);\n      }\n    }\n  }, {\n    name: '创建新计划',\n    action: async () => {\n      setLoading(true);\n      try {\n        const newPlan = await planApi.createPlan({\n          title: '测试计划 ' + new Date().toLocaleTimeString(),\n          description: '通过API创建的测试计划'\n        }, language);\n        return JSON.stringify(newPlan, null, 2);\n      } catch (error) {\n        return `错误: ${error instanceof Error ? error.message : String(error)}`;\n      } finally {\n        setLoading(false);\n      }\n    }\n  }, {\n    name: '更新计划进度',\n    action: async () => {\n      setLoading(true);\n      try {\n        // 先获取计划列表，然后更新第一个计划\n        const plans = await planApi.fetchPlans(language);\n        if (plans.length === 0) {\n          return '没有可更新的计划';\n        }\n        const plan = plans[0];\n        const updatedPlan = await planApi.updatePlan(plan.id, {\n          progress: Math.min(100, plan.progress + 10)\n        }, language);\n        return JSON.stringify(updatedPlan, null, 2);\n      } catch (error) {\n        return `错误: ${error instanceof Error ? error.message : String(error)}`;\n      } finally {\n        setLoading(false);\n      }\n    }\n  }, {\n    name: '删除计划(最后一个)',\n    action: async () => {\n      setLoading(true);\n      try {\n        // 先获取计划列表，然后删除最后一个计划\n        const plans = await planApi.fetchPlans(language);\n        if (plans.length === 0) {\n          return '没有可删除的计划';\n        }\n        const plan = plans[plans.length - 1];\n        await planApi.deletePlan(plan.id, language);\n        return `成功删除计划: ${plan.title}`;\n      } catch (error) {\n        return `错误: ${error instanceof Error ? error.message : String(error)}`;\n      } finally {\n        setLoading(false);\n      }\n    }\n  }];\n  const runTest = async test => {\n    const result = await test.action();\n    setResult(result);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"max-w-4xl mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        className: \"text-xl\",\n        children: \"API \\u63A5\\u53E3\\u6D4B\\u8BD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 mb-6\",\n        children: apiTests.map((test, index) => /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          onClick: () => runTest(test),\n          disabled: loading,\n          children: test.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-medium mb-2\",\n          children: \"\\u6D4B\\u8BD5\\u7ED3\\u679C\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"p-4 bg-gray-50 rounded-md overflow-auto max-h-80 text-xs\",\n          children: loading ? '加载中...' : result || '点击上方按钮测试API接口'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiTest, \"8Pf4rvqiTFwKn2z9/mzjVL/m/j8=\", false, function () {\n  return [useLanguage];\n});\n_c = ApiTest;\nexport default ApiTest;\nvar _c;\n$RefreshReg$(_c, \"ApiTest\");","map":{"version":3,"names":["React","useState","planApi","useLanguage","Button","Card","CardContent","CardHeader","CardTitle","jsxDEV","_jsxDEV","ApiTest","_s","t","language","result","setResult","loading","setLoading","apiTests","name","action","plans","fetchPlans","JSON","stringify","error","Error","message","String","newPlan","createPlan","title","Date","toLocaleTimeString","description","length","plan","updatedPlan","updatePlan","id","progress","Math","min","deletePlan","runTest","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/devbox/project/src/components/features/dashboard/api-test.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { planApi } from '../../../lib/api';\nimport { Plan } from '../../../types/task';\nimport { useLanguage } from '../../../lib/language-context';\nimport { Button } from '../../../components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/card';\n\nconst ApiTest: React.FC = () => {\n  const { t, language } = useLanguage();\n  const [result, setResult] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const apiTests = [\n    {\n      name: '获取计划列表',\n      action: async () => {\n        setLoading(true);\n        try {\n          const plans = await planApi.fetchPlans(language);\n          return JSON.stringify(plans, null, 2);\n        } catch (error) {\n          return `错误: ${error instanceof Error ? error.message : String(error)}`;\n        } finally {\n          setLoading(false);\n        }\n      }\n    },\n    {\n      name: '创建新计划',\n      action: async () => {\n        setLoading(true);\n        try {\n          const newPlan = await planApi.createPlan({\n            title: '测试计划 ' + new Date().toLocaleTimeString(),\n            description: '通过API创建的测试计划'\n          }, language);\n          return JSON.stringify(newPlan, null, 2);\n        } catch (error) {\n          return `错误: ${error instanceof Error ? error.message : String(error)}`;\n        } finally {\n          setLoading(false);\n        }\n      }\n    },\n    {\n      name: '更新计划进度',\n      action: async () => {\n        setLoading(true);\n        try {\n          // 先获取计划列表，然后更新第一个计划\n          const plans = await planApi.fetchPlans(language);\n          if (plans.length === 0) {\n            return '没有可更新的计划';\n          }\n          \n          const plan = plans[0];\n          const updatedPlan = await planApi.updatePlan(\n            plan.id, \n            { progress: Math.min(100, plan.progress + 10) },\n            language\n          );\n          \n          return JSON.stringify(updatedPlan, null, 2);\n        } catch (error) {\n          return `错误: ${error instanceof Error ? error.message : String(error)}`;\n        } finally {\n          setLoading(false);\n        }\n      }\n    },\n    {\n      name: '删除计划(最后一个)',\n      action: async () => {\n        setLoading(true);\n        try {\n          // 先获取计划列表，然后删除最后一个计划\n          const plans = await planApi.fetchPlans(language);\n          if (plans.length === 0) {\n            return '没有可删除的计划';\n          }\n          \n          const plan = plans[plans.length - 1];\n          await planApi.deletePlan(plan.id, language);\n          \n          return `成功删除计划: ${plan.title}`;\n        } catch (error) {\n          return `错误: ${error instanceof Error ? error.message : String(error)}`;\n        } finally {\n          setLoading(false);\n        }\n      }\n    }\n  ];\n\n  const runTest = async (test: typeof apiTests[0]) => {\n    const result = await test.action();\n    setResult(result);\n  };\n\n  return (\n    <Card className=\"max-w-4xl mx-auto mt-8\">\n      <CardHeader>\n        <CardTitle className=\"text-xl\">API 接口测试</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-2 gap-4 mb-6\">\n          {apiTests.map((test, index) => (\n            <Button\n              key={index}\n              variant=\"outline\"\n              onClick={() => runTest(test)}\n              disabled={loading}\n            >\n              {test.name}\n            </Button>\n          ))}\n        </div>\n\n        <div className=\"mt-4\">\n          <div className=\"text-sm font-medium mb-2\">测试结果：</div>\n          <pre className=\"p-4 bg-gray-50 rounded-md overflow-auto max-h-80 text-xs\">\n            {loading ? '加载中...' : result || '点击上方按钮测试API接口'}\n          </pre>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ApiTest; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}