{"ast":null,"code":"var _jsxFileName = \"/home/devbox/project/src/pages/clarify-page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useLanguage } from '../lib/language-context';\nimport { toast } from 'sonner';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Assume API base URL is configured elsewhere or use environment variable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000'; // Adjust if needed\n\nconst ClarifyPage = () => {\n  _s();\n  console.log(\"[ClarifyPage] Component mounted.\");\n  const {\n    t\n  } = useLanguage();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [taskTitle, setTaskTitle] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({}); // Store answers by index\n  const [currentIndex, setCurrentIndex] = useState(0); // Index of the question being currently asked/answered\n  const [currentInput, setCurrentInput] = useState('');\n  const [isLoading, setIsLoading] = useState(true); // Loading state for initial questions\n  const [isEnded, setIsEnded] = useState(false); // Flag for receiving [END]\n  const eventSourceRef = useRef(null);\n  const inputRef = useRef(null); // Ref for focusing input\n\n  // Effect for Initialization (Fetch title, POST, SSE)\n  useEffect(() => {\n    const title = searchParams.get('taskTitle');\n    if (!title) {\n      toast.error(t('error.missingTaskTitle'));\n      navigate('/dashboard');\n      return;\n    }\n    const decodedTitle = decodeURIComponent(title);\n    setTaskTitle(decodedTitle);\n    setIsLoading(true);\n\n    // Function to start the process\n    const startClarification = async () => {\n      try {\n        // 1. Send POST request to start backend process\n        console.log('[ClarifyPage] Sending POST /api/clarify/start');\n        const postResponse = await fetch(`${API_BASE_URL}/api/clarify/start`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            taskTitle: decodedTitle\n          })\n        });\n        if (!postResponse.ok) {\n          console.error('POST request failed:', postResponse.statusText);\n          toast.error(t('error.clarifyStartFailed'));\n          // Decide if we should still try to connect to SSE or redirect\n          // For mock, we can continue to SSE\n          // navigate('/dashboard');\n          // return;\n        }\n        console.log('[ClarifyPage] POST request successful');\n\n        // 2. Establish SSE connection\n        console.log(`[ClarifyPage] Establishing SSE connection to /api/clarify/stream?taskTitle=${encodeURIComponent(decodedTitle)}`);\n        const es = new EventSource(`${API_BASE_URL}/api/clarify/stream?taskTitle=${encodeURIComponent(decodedTitle)}`);\n        eventSourceRef.current = es;\n        es.onopen = () => {\n          console.log('[ClarifyPage] SSE Connection Opened');\n          setIsLoading(false); // Stop loading once connection is open\n        };\n        es.onmessage = event => {\n          console.log('[ClarifyPage] SSE Message Received:', event.data);\n          if (event.data === '[END]') {\n            console.log('[ClarifyPage] SSE Received [END] marker');\n            setIsEnded(true);\n            es.close();\n            console.log('[ClarifyPage] SSE Connection Closed by client');\n          } else {\n            // Add new question\n            setQuestions(prev => [...prev, event.data]);\n          }\n        };\n        es.onerror = error => {\n          console.error('[ClarifyPage] SSE Error:', error);\n          toast.error(t('error.sseConnection'));\n          setIsLoading(false);\n          setIsEnded(true); // Assume ended on error to prevent getting stuck\n          if (es) {\n            es.close();\n            console.log('[ClarifyPage] SSE Connection Closed due to error');\n          }\n        };\n      } catch (error) {\n        console.error('[ClarifyPage] Error during clarification start:', error);\n        toast.error(t('error.generic'));\n        setIsLoading(false);\n        // Maybe navigate back or show error state\n        navigate('/dashboard');\n      }\n    };\n    startClarification();\n\n    // Cleanup function\n    return () => {\n      if (eventSourceRef.current) {\n        console.log('[ClarifyPage] Cleaning up SSE connection');\n        eventSourceRef.current.close();\n        eventSourceRef.current = null;\n      }\n    };\n  }, [searchParams, navigate, t]);\n\n  // Effect for Navigation when finished\n  useEffect(() => {\n    // Check if all received questions have been answered AND the [END] marker was received\n    if (isEnded && questions.length > 0 && currentIndex === questions.length) {\n      console.log('[ClarifyPage] All questions answered and END received. Navigating to /plan...');\n      // Convert answers record to simple array in order\n      const finalAnswers = questions.map((_, index) => answers[index] || ''); // Get answer or empty string\n\n      // Short delay before navigation\n      const timer = setTimeout(() => {\n        navigate('/plan', {\n          state: {\n            taskTitle,\n            answers: finalAnswers,\n            questions\n          }\n        });\n      }, 500); // Small delay\n      return () => clearTimeout(timer);\n    }\n  }, [currentIndex, questions, answers, isEnded, taskTitle, navigate]);\n\n  // Effect to focus input when current question changes\n  useEffect(() => {\n    if (currentIndex < questions.length && !isEnded) {\n      var _inputRef$current;\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [currentIndex, questions.length, isEnded]);\n\n  // Handle answer submission\n  const handleSubmitAnswer = useCallback(() => {\n    if (currentInput.trim() === '' || currentIndex >= questions.length) return;\n    console.log(`[ClarifyPage] Submitting answer for index ${currentIndex}:`, currentInput.trim());\n    setAnswers(prev => ({\n      ...prev,\n      [currentIndex]: currentInput.trim()\n    }));\n    setCurrentInput('');\n    setCurrentIndex(prev => prev + 1);\n  }, [currentInput, currentIndex, questions.length]);\n\n  // Handle input keydown (Enter)\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSubmitAnswer();\n    }\n  };\n\n  // 处理返回Dashboard\n  const handleBackToDashboard = () => {\n    navigate('/dashboard');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 flex items-center justify-center p-4 md:p-6 zen-bg\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"max-w-2xl w-full bg-white rounded-xl shadow-lg p-6 md:p-10 space-y-6 md:space-y-8\",\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center border-b pb-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mb-1\",\n          children: t('clarify.yourGoal')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl md:text-2xl font-semibold text-gray-800\",\n          children: taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center py-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: t('clarify.loading')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n          initial: false,\n          children: questions.map((question, index) =>\n          // Only render answered questions and the current one\n          index <= currentIndex && /*#__PURE__*/_jsxDEV(motion.div, {\n            layout: true,\n            initial: {\n              opacity: 0,\n              height: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              height: 'auto',\n              y: 0\n            },\n            exit: {\n              opacity: 0,\n              height: 0,\n              y: -10\n            },\n            transition: {\n              duration: 0.3,\n              type: 'spring',\n              stiffness: 100,\n              damping: 15\n            },\n            className: \"overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-4 rounded-lg ${index < currentIndex ? 'bg-gray-50' : 'bg-indigo-50 border border-indigo-100'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-800 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: [\"Q\", index + 1, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, this), \" \", question]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 23\n              }, this), index < currentIndex && answers[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-4 pl-3 border-l-2 border-indigo-200\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-indigo-700 italic\",\n                  children: answers[index]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 25\n              }, this), index === currentIndex && !isEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-3 ml-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    ref: inputRef,\n                    type: \"text\",\n                    value: currentInput,\n                    onChange: e => setCurrentInput(e.target.value),\n                    onKeyDown: handleKeyDown,\n                    placeholder: t('clarify.answerPlaceholder'),\n                    className: \"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-150 ease-in-out\",\n                    disabled: currentIndex !== index || isEnded // Disable if not current or ended\n                    ,\n                    \"aria-label\": `Answer to question ${index + 1}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"absolute right-3 top-1/2 transform -translate-y-1/2 text-xs text-gray-400 pointer-events-none\",\n                    children: t('clarify.enterToSubmit')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), !isEnded && questions.length > 0 && currentIndex === questions.length && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          className: \"text-center text-gray-500 pt-4\",\n          children: t('clarify.waitingNextQuestion')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this), isEnded && currentIndex === questions.length && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          className: \"text-center text-indigo-600 font-medium pt-4\",\n          children: t('clarify.completed')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(ClarifyPage, \"yB5Sw5ElOM5oc8ytx+n1vtUdLjw=\", false, function () {\n  return [useLanguage, useNavigate, useSearchParams];\n});\n_c = ClarifyPage;\nexport default ClarifyPage;\nvar _c;\n$RefreshReg$(_c, \"ClarifyPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","useNavigate","useSearchParams","useLanguage","toast","motion","AnimatePresence","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","ClarifyPage","_s","console","log","t","navigate","searchParams","taskTitle","setTaskTitle","questions","setQuestions","answers","setAnswers","currentIndex","setCurrentIndex","currentInput","setCurrentInput","isLoading","setIsLoading","isEnded","setIsEnded","eventSourceRef","inputRef","title","get","error","decodedTitle","decodeURIComponent","startClarification","postResponse","fetch","method","headers","body","JSON","stringify","ok","statusText","encodeURIComponent","es","EventSource","current","onopen","onmessage","event","data","close","prev","onerror","length","finalAnswers","map","_","index","timer","setTimeout","state","clearTimeout","_inputRef$current","focus","handleSubmitAnswer","trim","handleKeyDown","e","key","preventDefault","handleBackToDashboard","className","children","div","initial","opacity","y","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","question","layout","height","exit","type","stiffness","damping","ref","value","onChange","target","onKeyDown","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/devbox/project/src/pages/clarify-page.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useLanguage } from '../lib/language-context';\nimport { Button } from '../components/ui/button';\nimport { toast } from 'sonner';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Assume API base URL is configured elsewhere or use environment variable\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000'; // Adjust if needed\n\ninterface ClarifyPageState {\n  taskTitle: string;\n  questions: string[];\n  answers: string[];\n}\n\nconst ClarifyPage: React.FC = () => {\n  console.log(\"[ClarifyPage] Component mounted.\");\n  const { t } = useLanguage();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const [taskTitle, setTaskTitle] = useState<string>('');\n  const [questions, setQuestions] = useState<string[]>([]);\n  const [answers, setAnswers] = useState<Record<number, string>>({}); // Store answers by index\n  const [currentIndex, setCurrentIndex] = useState(0); // Index of the question being currently asked/answered\n  const [currentInput, setCurrentInput] = useState('');\n  const [isLoading, setIsLoading] = useState(true); // Loading state for initial questions\n  const [isEnded, setIsEnded] = useState(false); // Flag for receiving [END]\n  const eventSourceRef = useRef<EventSource | null>(null);\n  const inputRef = useRef<HTMLInputElement>(null); // Ref for focusing input\n\n  // Effect for Initialization (Fetch title, POST, SSE)\n  useEffect(() => {\n    const title = searchParams.get('taskTitle');\n    if (!title) {\n      toast.error(t('error.missingTaskTitle'));\n      navigate('/dashboard');\n      return;\n    }\n\n    const decodedTitle = decodeURIComponent(title);\n    setTaskTitle(decodedTitle);\n    setIsLoading(true);\n\n    // Function to start the process\n    const startClarification = async () => {\n      try {\n        // 1. Send POST request to start backend process\n        console.log('[ClarifyPage] Sending POST /api/clarify/start');\n        const postResponse = await fetch(`${API_BASE_URL}/api/clarify/start`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ taskTitle: decodedTitle }),\n        });\n\n        if (!postResponse.ok) {\n          console.error('POST request failed:', postResponse.statusText);\n          toast.error(t('error.clarifyStartFailed'));\n          // Decide if we should still try to connect to SSE or redirect\n          // For mock, we can continue to SSE\n          // navigate('/dashboard');\n          // return;\n        }\n        console.log('[ClarifyPage] POST request successful');\n\n        // 2. Establish SSE connection\n        console.log(`[ClarifyPage] Establishing SSE connection to /api/clarify/stream?taskTitle=${encodeURIComponent(decodedTitle)}`);\n        const es = new EventSource(`${API_BASE_URL}/api/clarify/stream?taskTitle=${encodeURIComponent(decodedTitle)}`);\n        eventSourceRef.current = es;\n\n        es.onopen = () => {\n          console.log('[ClarifyPage] SSE Connection Opened');\n          setIsLoading(false); // Stop loading once connection is open\n        };\n\n        es.onmessage = (event) => {\n          console.log('[ClarifyPage] SSE Message Received:', event.data);\n          if (event.data === '[END]') {\n            console.log('[ClarifyPage] SSE Received [END] marker');\n            setIsEnded(true);\n            es.close();\n            console.log('[ClarifyPage] SSE Connection Closed by client');\n          } else {\n            // Add new question\n            setQuestions(prev => [...prev, event.data]);\n          }\n        };\n\n        es.onerror = (error) => {\n          console.error('[ClarifyPage] SSE Error:', error);\n          toast.error(t('error.sseConnection'));\n          setIsLoading(false);\n          setIsEnded(true); // Assume ended on error to prevent getting stuck\n          if (es) {\n            es.close();\n            console.log('[ClarifyPage] SSE Connection Closed due to error');\n          }\n        };\n\n      } catch (error) {\n        console.error('[ClarifyPage] Error during clarification start:', error);\n        toast.error(t('error.generic'));\n        setIsLoading(false);\n        // Maybe navigate back or show error state\n        navigate('/dashboard');\n      }\n    };\n\n    startClarification();\n\n    // Cleanup function\n    return () => {\n      if (eventSourceRef.current) {\n        console.log('[ClarifyPage] Cleaning up SSE connection');\n        eventSourceRef.current.close();\n        eventSourceRef.current = null;\n      }\n    };\n  }, [searchParams, navigate, t]);\n\n  // Effect for Navigation when finished\n  useEffect(() => {\n    // Check if all received questions have been answered AND the [END] marker was received\n    if (isEnded && questions.length > 0 && currentIndex === questions.length) {\n      console.log('[ClarifyPage] All questions answered and END received. Navigating to /plan...');\n      // Convert answers record to simple array in order\n      const finalAnswers = questions.map((_, index) => answers[index] || ''); // Get answer or empty string\n\n      // Short delay before navigation\n      const timer = setTimeout(() => {\n        navigate('/plan', {\n          state: { taskTitle, answers: finalAnswers, questions } as ClarifyPageState\n        });\n      }, 500); // Small delay\n      return () => clearTimeout(timer);\n    }\n  }, [currentIndex, questions, answers, isEnded, taskTitle, navigate]);\n\n  // Effect to focus input when current question changes\n  useEffect(() => {\n    if (currentIndex < questions.length && !isEnded) {\n      inputRef.current?.focus();\n    }\n  }, [currentIndex, questions.length, isEnded]);\n\n  // Handle answer submission\n  const handleSubmitAnswer = useCallback(() => {\n    if (currentInput.trim() === '' || currentIndex >= questions.length) return;\n\n    console.log(`[ClarifyPage] Submitting answer for index ${currentIndex}:`, currentInput.trim());\n    setAnswers(prev => ({ ...prev, [currentIndex]: currentInput.trim() }));\n    setCurrentInput('');\n    setCurrentIndex(prev => prev + 1);\n  }, [currentInput, currentIndex, questions.length]);\n\n  // Handle input keydown (Enter)\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSubmitAnswer();\n    }\n  };\n\n  // 处理返回Dashboard\n  const handleBackToDashboard = () => {\n    navigate('/dashboard');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4 md:p-6 zen-bg\">\n      <motion.div\n        className=\"max-w-2xl w-full bg-white rounded-xl shadow-lg p-6 md:p-10 space-y-6 md:space-y-8\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        {/* Task Title Display */}\n        <div className=\"text-center border-b pb-4 mb-4\">\n          <p className=\"text-sm text-gray-500 mb-1\">{t('clarify.yourGoal')}</p>\n          <h1 className=\"text-xl md:text-2xl font-semibold text-gray-800\">{taskTitle}</h1>\n        </div>\n\n        {/* Loading State */}\n        {isLoading && (\n          <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mb-4\"></div>\n            <p className=\"text-gray-600\">{t('clarify.loading')}</p>\n          </div>\n        )}\n\n        {/* Q&A Area */}\n        {!isLoading && (\n          <div className=\"space-y-6\">\n            <AnimatePresence initial={false}>\n              {questions.map((question, index) => (\n                // Only render answered questions and the current one\n                index <= currentIndex && (\n                  <motion.div\n                    key={index}\n                    layout\n                    initial={{ opacity: 0, height: 0, y: 10 }}\n                    animate={{ opacity: 1, height: 'auto', y: 0 }}\n                    exit={{ opacity: 0, height: 0, y: -10 }}\n                    transition={{ duration: 0.3, type: 'spring', stiffness: 100, damping: 15 }}\n                    className=\"overflow-hidden\"\n                  >\n                    <div className={`p-4 rounded-lg ${index < currentIndex ? 'bg-gray-50' : 'bg-indigo-50 border border-indigo-100'}`}>\n                      {/* Question */}\n                      <p className=\"text-gray-800 mb-3\">\n                        <span className=\"font-medium\">Q{index + 1}:</span> {question}\n                      </p>\n\n                      {/* Answer Display (for answered questions) */}\n                      {index < currentIndex && answers[index] && (\n                        <div className=\"ml-4 pl-3 border-l-2 border-indigo-200\">\n                          <p className=\"text-indigo-700 italic\">{answers[index]}</p>\n                        </div>\n                      )}\n\n                      {/* Input Box (for current question) */}\n                      {index === currentIndex && !isEnded && (\n                        <div className=\"mt-3 ml-4\">\n                          <div className=\"relative\">\n                            <input\n                              ref={inputRef}\n                              type=\"text\"\n                              value={currentInput}\n                              onChange={(e) => setCurrentInput(e.target.value)}\n                              onKeyDown={handleKeyDown}\n                              placeholder={t('clarify.answerPlaceholder')}\n                              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-150 ease-in-out\"\n                              disabled={currentIndex !== index || isEnded} // Disable if not current or ended\n                              aria-label={`Answer to question ${index + 1}`}\n                            />\n                            <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-xs text-gray-400 pointer-events-none\">\n                              {t('clarify.enterToSubmit')}\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </motion.div>\n                )\n              ))}\n            </AnimatePresence>\n\n            {/* Waiting/Completion Message */}\n            {!isEnded && questions.length > 0 && currentIndex === questions.length && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                className=\"text-center text-gray-500 pt-4\"\n              >\n                {t('clarify.waitingNextQuestion')}\n              </motion.div>\n            )}\n            {isEnded && currentIndex === questions.length && (\n               <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                className=\"text-center text-indigo-600 font-medium pt-4\"\n               >\n                 {t('clarify.completed')}\n               </motion.div>\n            )}\n          </div>\n        )}\n\n        {/* No explicit buttons as per requirement */}\n\n      </motion.div>\n    </div>\n  );\n};\n\nexport default ClarifyPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}