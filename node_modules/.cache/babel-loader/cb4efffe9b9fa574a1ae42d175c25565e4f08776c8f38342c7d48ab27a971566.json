{"ast":null,"code":"var _jsxFileName = \"/home/devbox/project/src/components/features/ai-chat/ai-chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Button } from '../../ui/button';\nimport { Input } from '../../ui/input';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport MessageBubble from './message-bubble';\nimport ThinkingIndicator from './thinking-indicator';\n\n// 定义消息类型\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIChat = ({\n  initialMessages = [],\n  onSendMessage\n}) => {\n  _s();\n  const [messages, setMessages] = useState(initialMessages);\n  const [inputValue, setInputValue] = useState('');\n  const [status, setStatus] = useState('idle');\n  const messagesEndRef = useRef(null);\n\n  // 自动滚动到最新消息\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  const generateId = () => {\n    return Date.now().toString(36) + Math.random().toString(36).substring(2);\n  };\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || status !== 'idle') return;\n\n    // 创建用户消息\n    const userMessage = {\n      id: generateId(),\n      role: 'user',\n      content: inputValue,\n      timestamp: new Date()\n    };\n\n    // 更新状态并清空输入\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setStatus('thinking');\n    try {\n      // 如果没有提供onSendMessage回调，使用模拟响应\n      const response = onSendMessage ? await onSendMessage(inputValue) : await simulateResponse(inputValue);\n\n      // 添加AI回复\n      const assistantMessage = {\n        id: generateId(),\n        role: 'assistant',\n        content: response,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      setStatus('idle');\n    } catch (error) {\n      console.error('Failed to get AI response:', error);\n      setStatus('error');\n\n      // 添加错误消息\n      const errorMessage = {\n        id: generateId(),\n        role: 'system',\n        content: '抱歉，发生了错误。请稍后再试。',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      setTimeout(() => setStatus('idle'), 3000);\n    }\n  };\n\n  // 模拟AI响应，仅用于演示\n  const simulateResponse = async message => {\n    // 返回模拟的响应\n    return new Promise(resolve => {\n      const responses = [\"我理解你的问题。让我帮你分析一下...\", \"这是一个很好的问题。根据我的分析...\", \"我可以协助你解决这个问题。首先，你需要...\", \"让我思考一下最佳的解决方案。\", \"根据最新的研究和最佳实践，我建议...\"];\n\n      // 模拟网络延迟\n      setTimeout(() => {\n        const randomResponse = responses[Math.floor(Math.random() * responses.length)];\n        resolve(`${randomResponse} 你的问题是关于\"${message}\"的。`);\n      }, 1500);\n    });\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 10\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: /*#__PURE__*/_jsxDEV(MessageBubble, {\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)), status === 'thinking' && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          exit: {\n            opacity: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(ThinkingIndicator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t border-gray-200 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"\\u8F93\\u5165\\u60A8\\u7684\\u95EE\\u9898\\u6216\\u547D\\u4EE4...\",\n          disabled: status !== 'idle',\n          className: \"flex-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSendMessage,\n          disabled: !inputValue.trim() || status !== 'idle',\n          className: \"bg-blue-600 hover:bg-blue-700 text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-5 h-5\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14 5l7 7m0 0l-7 7m7-7H3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: \"\\u6309Enter\\u53D1\\u9001\\uFF0CShift+Enter\\u6362\\u884C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-red-500\",\n          children: \"\\u53D1\\u9001\\u5931\\u8D25\\uFF0C\\u8BF7\\u91CD\\u8BD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(AIChat, \"tL2jnkKSRkwWuPF9ZEj7S1qfHHE=\");\n_c = AIChat;\nexport default AIChat;\nvar _c;\n$RefreshReg$(_c, \"AIChat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Button","Input","motion","AnimatePresence","MessageBubble","ThinkingIndicator","jsxDEV","_jsxDEV","AIChat","initialMessages","onSendMessage","_s","messages","setMessages","inputValue","setInputValue","status","setStatus","messagesEndRef","current","scrollIntoView","behavior","generateId","Date","now","toString","Math","random","substring","handleSendMessage","trim","userMessage","id","role","content","timestamp","prev","response","simulateResponse","assistantMessage","error","console","errorMessage","setTimeout","message","Promise","resolve","responses","randomResponse","floor","length","handleKeyDown","e","key","shiftKey","preventDefault","className","children","map","div","initial","opacity","y","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","exit","ref","value","onChange","target","onKeyDown","placeholder","disabled","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["/home/devbox/project/src/components/features/ai-chat/ai-chat.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Button } from '../../ui/button';\nimport { Input } from '../../ui/input';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport MessageBubble from './message-bubble';\nimport ThinkingIndicator from './thinking-indicator';\n\n// 定义消息类型\nexport interface Message {\n  id: string;\n  role: 'user' | 'assistant' | 'system';\n  content: string;\n  timestamp: Date;\n}\n\ninterface AIChatProps {\n  initialMessages?: Message[];\n  onSendMessage?: (message: string) => Promise<string>;\n}\n\nconst AIChat: React.FC<AIChatProps> = ({ \n  initialMessages = [], \n  onSendMessage \n}) => {\n  const [messages, setMessages] = useState<Message[]>(initialMessages);\n  const [inputValue, setInputValue] = useState('');\n  const [status, setStatus] = useState<'idle' | 'thinking' | 'responding' | 'error'>('idle');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // 自动滚动到最新消息\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  const generateId = () => {\n    return Date.now().toString(36) + Math.random().toString(36).substring(2);\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || status !== 'idle') return;\n    \n    // 创建用户消息\n    const userMessage: Message = {\n      id: generateId(),\n      role: 'user',\n      content: inputValue,\n      timestamp: new Date()\n    };\n    \n    // 更新状态并清空输入\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setStatus('thinking');\n    \n    try {\n      // 如果没有提供onSendMessage回调，使用模拟响应\n      const response = onSendMessage \n        ? await onSendMessage(inputValue) \n        : await simulateResponse(inputValue);\n      \n      // 添加AI回复\n      const assistantMessage: Message = {\n        id: generateId(),\n        role: 'assistant',\n        content: response,\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, assistantMessage]);\n      setStatus('idle');\n    } catch (error) {\n      console.error('Failed to get AI response:', error);\n      setStatus('error');\n      \n      // 添加错误消息\n      const errorMessage: Message = {\n        id: generateId(),\n        role: 'system',\n        content: '抱歉，发生了错误。请稍后再试。',\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, errorMessage]);\n      setTimeout(() => setStatus('idle'), 3000);\n    }\n  };\n\n  // 模拟AI响应，仅用于演示\n  const simulateResponse = async (message: string): Promise<string> => {\n    // 返回模拟的响应\n    return new Promise((resolve) => {\n      const responses = [\n        \"我理解你的问题。让我帮你分析一下...\",\n        \"这是一个很好的问题。根据我的分析...\",\n        \"我可以协助你解决这个问题。首先，你需要...\",\n        \"让我思考一下最佳的解决方案。\",\n        \"根据最新的研究和最佳实践，我建议...\"\n      ];\n      \n      // 模拟网络延迟\n      setTimeout(() => {\n        const randomResponse = responses[Math.floor(Math.random() * responses.length)];\n        resolve(`${randomResponse} 你的问题是关于\"${message}\"的。`);\n      }, 1500);\n    });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* 消息历史区域 */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        <AnimatePresence>\n          {messages.map((message) => (\n            <motion.div\n              key={message.id}\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3 }}\n            >\n              <MessageBubble message={message} />\n            </motion.div>\n          ))}\n          \n          {status === 'thinking' && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n            >\n              <ThinkingIndicator />\n            </motion.div>\n          )}\n        </AnimatePresence>\n        \n        {/* 用于自动滚动的引用元素 */}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      {/* 底部输入区域 */}\n      <div className=\"border-t border-gray-200 p-4\">\n        <div className=\"flex items-center space-x-2\">\n          <Input\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyDown={handleKeyDown}\n            placeholder=\"输入您的问题或命令...\"\n            disabled={status !== 'idle'}\n            className=\"flex-1\"\n          />\n          <Button \n            onClick={handleSendMessage}\n            disabled={!inputValue.trim() || status !== 'idle'}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n            </svg>\n          </Button>\n        </div>\n        <div className=\"flex justify-between items-center mt-2\">\n          <div className=\"text-xs text-gray-500\">按Enter发送，Shift+Enter换行</div>\n          {status === 'error' && (\n            <div className=\"text-xs text-red-500\">发送失败，请重试</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AIChat; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,iBAAiB,MAAM,sBAAsB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAaA,MAAMC,MAA6B,GAAGA,CAAC;EACrCC,eAAe,GAAG,EAAE;EACpBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAYY,eAAe,CAAC;EACpE,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAA+C,MAAM,CAAC;EAC1F,MAAMqB,cAAc,GAAGpB,MAAM,CAAiB,IAAI,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd,IAAImB,cAAc,CAACC,OAAO,EAAE;MAC1BD,cAAc,CAACC,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC/D;EACF,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAOC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACF,QAAQ,CAAC,EAAE,CAAC,CAACG,SAAS,CAAC,CAAC,CAAC;EAC1E,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACf,UAAU,CAACgB,IAAI,CAAC,CAAC,IAAId,MAAM,KAAK,MAAM,EAAE;;IAE7C;IACA,MAAMe,WAAoB,GAAG;MAC3BC,EAAE,EAAEV,UAAU,CAAC,CAAC;MAChBW,IAAI,EAAE,MAAM;MACZC,OAAO,EAAEpB,UAAU;MACnBqB,SAAS,EAAE,IAAIZ,IAAI,CAAC;IACtB,CAAC;;IAED;IACAV,WAAW,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,WAAW,CAAC,CAAC;IAC3ChB,aAAa,CAAC,EAAE,CAAC;IACjBE,SAAS,CAAC,UAAU,CAAC;IAErB,IAAI;MACF;MACA,MAAMoB,QAAQ,GAAG3B,aAAa,GAC1B,MAAMA,aAAa,CAACI,UAAU,CAAC,GAC/B,MAAMwB,gBAAgB,CAACxB,UAAU,CAAC;;MAEtC;MACA,MAAMyB,gBAAyB,GAAG;QAChCP,EAAE,EAAEV,UAAU,CAAC,CAAC;QAChBW,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAEG,QAAQ;QACjBF,SAAS,EAAE,IAAIZ,IAAI,CAAC;MACtB,CAAC;MAEDV,WAAW,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEG,gBAAgB,CAAC,CAAC;MAChDtB,SAAS,CAAC,MAAM,CAAC;IACnB,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDvB,SAAS,CAAC,OAAO,CAAC;;MAElB;MACA,MAAMyB,YAAqB,GAAG;QAC5BV,EAAE,EAAEV,UAAU,CAAC,CAAC;QAChBW,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE,iBAAiB;QAC1BC,SAAS,EAAE,IAAIZ,IAAI,CAAC;MACtB,CAAC;MAEDV,WAAW,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEM,YAAY,CAAC,CAAC;MAC5CC,UAAU,CAAC,MAAM1B,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC;IAC3C;EACF,CAAC;;EAED;EACA,MAAMqB,gBAAgB,GAAG,MAAOM,OAAe,IAAsB;IACnE;IACA,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9B,MAAMC,SAAS,GAAG,CAChB,qBAAqB,EACrB,qBAAqB,EACrB,wBAAwB,EACxB,gBAAgB,EAChB,qBAAqB,CACtB;;MAED;MACAJ,UAAU,CAAC,MAAM;QACf,MAAMK,cAAc,GAAGD,SAAS,CAACrB,IAAI,CAACuB,KAAK,CAACvB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGoB,SAAS,CAACG,MAAM,CAAC,CAAC;QAC9EJ,OAAO,CAAC,GAAGE,cAAc,YAAYJ,OAAO,KAAK,CAAC;MACpD,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMO,aAAa,GAAIC,CAAwC,IAAK;IAClE,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;MACpCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClB1B,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKiD,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBAEnClD,OAAA;MAAKiD,SAAS,EAAC,sCAAsC;MAAAC,QAAA,gBACnDlD,OAAA,CAACJ,eAAe;QAAAsD,QAAA,GACb7C,QAAQ,CAAC8C,GAAG,CAAEd,OAAO,iBACpBrC,OAAA,CAACL,MAAM,CAACyD,GAAG;UAETC,OAAO,EAAE;YAAEC,OAAO,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAG,CAAE;UAC/BC,OAAO,EAAE;YAAEF,OAAO,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAE,CAAE;UAC9BE,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAI,CAAE;UAAAR,QAAA,eAE9BlD,OAAA,CAACH,aAAa;YAACwC,OAAO,EAAEA;UAAQ;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GAL9BzB,OAAO,CAACZ,EAAE;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAML,CACb,CAAC,EAEDrD,MAAM,KAAK,UAAU,iBACpBT,OAAA,CAACL,MAAM,CAACyD,GAAG;UACTC,OAAO,EAAE;YAAEC,OAAO,EAAE;UAAE,CAAE;UACxBE,OAAO,EAAE;YAAEF,OAAO,EAAE;UAAE,CAAE;UACxBS,IAAI,EAAE;YAAET,OAAO,EAAE;UAAE,CAAE;UAAAJ,QAAA,eAErBlD,OAAA,CAACF,iBAAiB;YAAA6D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CACb;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACc,CAAC,eAGlB9D,OAAA;QAAKgE,GAAG,EAAErD;MAAe;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAGN9D,OAAA;MAAKiD,SAAS,EAAC,8BAA8B;MAAAC,QAAA,gBAC3ClD,OAAA;QAAKiD,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAC1ClD,OAAA,CAACN,KAAK;UACJuE,KAAK,EAAE1D,UAAW;UAClB2D,QAAQ,EAAGrB,CAAC,IAAKrC,aAAa,CAACqC,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;UAC/CG,SAAS,EAAExB,aAAc;UACzByB,WAAW,EAAC,2DAAc;UAC1BC,QAAQ,EAAE7D,MAAM,KAAK,MAAO;UAC5BwC,SAAS,EAAC;QAAQ;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACF9D,OAAA,CAACP,MAAM;UACL8E,OAAO,EAAEjD,iBAAkB;UAC3BgD,QAAQ,EAAE,CAAC/D,UAAU,CAACgB,IAAI,CAAC,CAAC,IAAId,MAAM,KAAK,MAAO;UAClDwC,SAAS,EAAC,0CAA0C;UAAAC,QAAA,eAEpDlD,OAAA;YAAKiD,SAAS,EAAC,SAAS;YAACuB,IAAI,EAAC,MAAM;YAACC,MAAM,EAAC,cAAc;YAACC,OAAO,EAAC,WAAW;YAAAxB,QAAA,eAC5ElD,OAAA;cAAM2E,aAAa,EAAC,OAAO;cAACC,cAAc,EAAC,OAAO;cAACC,WAAW,EAAE,CAAE;cAACC,CAAC,EAAC;YAA0B;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/F;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN9D,OAAA;QAAKiD,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDlD,OAAA;UAAKiD,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAAsB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAClErD,MAAM,KAAK,OAAO,iBACjBT,OAAA;UAAKiD,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAAC;QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACpD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1D,EAAA,CA7JIH,MAA6B;AAAA8E,EAAA,GAA7B9E,MAA6B;AA+JnC,eAAeA,MAAM;AAAC,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}