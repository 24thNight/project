{"ast":null,"code":"var _jsxFileName = \"/home/devbox/project/src/components/features/ai-chat/message-bubble.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageBubble = ({\n  message\n}) => {\n  // 根据消息角色设置不同的样式\n  const getBubbleStyle = () => {\n    switch (message.role) {\n      case 'user':\n        return 'bg-blue-600 text-white rounded-tl-2xl rounded-tr-2xl rounded-br-2xl';\n      case 'assistant':\n        return 'bg-gray-100 text-gray-800 rounded-tl-2xl rounded-tr-2xl rounded-bl-2xl';\n      case 'system':\n        return 'bg-amber-100 text-amber-800 rounded-2xl';\n      default:\n        return 'bg-gray-100 text-gray-800 rounded-2xl';\n    }\n  };\n\n  // 格式化时间戳\n  const formatTime = date => {\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // 消息内容可能包含代码块，我们需要渲染它\n  const renderContent = content => {\n    // 简单的代码块识别和渲染\n    const codeBlockRegex = /```([a-z]*)\\n([\\s\\S]*?)```/g;\n    let lastIndex = 0;\n    const parts = [];\n    let match;\n\n    // 提取并处理代码块\n    while ((match = codeBlockRegex.exec(content)) !== null) {\n      // 添加代码块之前的文本\n      if (match.index > lastIndex) {\n        parts.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"whitespace-pre-wrap\",\n          children: content.substring(lastIndex, match.index)\n        }, `text-${lastIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this));\n      }\n\n      // 添加代码块\n      const language = match[1] || 'plaintext';\n      const code = match[2];\n      parts.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-2 bg-gray-800 text-gray-200 p-3 rounded overflow-x-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-400 mb-1\",\n          children: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"font-mono text-sm\",\n          children: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, `code-${match.index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this));\n      lastIndex = match.index + match[0].length;\n    }\n\n    // 添加最后一部分文本（如果有）\n    if (lastIndex < content.length) {\n      parts.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"whitespace-pre-wrap\",\n        children: content.substring(lastIndex)\n      }, `text-${lastIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this));\n    }\n    return parts.length > 0 ? parts : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"whitespace-pre-wrap\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 39\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `max-w-[80%] p-3 ${getBubbleStyle()}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm\",\n        children: renderContent(message.content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-xs mt-1 ${message.role === 'user' ? 'text-blue-200' : 'text-gray-500'} text-right`,\n        children: formatTime(message.timestamp)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageBubble;\nexport default MessageBubble;\nvar _c;\n$RefreshReg$(_c, \"MessageBubble\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageBubble","message","getBubbleStyle","role","formatTime","date","toLocaleTimeString","hour","minute","renderContent","content","codeBlockRegex","lastIndex","parts","match","exec","index","push","className","children","substring","fileName","_jsxFileName","lineNumber","columnNumber","language","code","length","timestamp","_c","$RefreshReg$"],"sources":["/home/devbox/project/src/components/features/ai-chat/message-bubble.tsx"],"sourcesContent":["import React from 'react';\nimport { Message } from './ai-chat';\nimport { motion } from 'framer-motion';\n\ninterface MessageBubbleProps {\n  message: Message;\n}\n\nconst MessageBubble: React.FC<MessageBubbleProps> = ({ message }) => {\n  // 根据消息角色设置不同的样式\n  const getBubbleStyle = () => {\n    switch (message.role) {\n      case 'user':\n        return 'bg-blue-600 text-white rounded-tl-2xl rounded-tr-2xl rounded-br-2xl';\n      case 'assistant':\n        return 'bg-gray-100 text-gray-800 rounded-tl-2xl rounded-tr-2xl rounded-bl-2xl';\n      case 'system':\n        return 'bg-amber-100 text-amber-800 rounded-2xl';\n      default:\n        return 'bg-gray-100 text-gray-800 rounded-2xl';\n    }\n  };\n\n  // 格式化时间戳\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  // 消息内容可能包含代码块，我们需要渲染它\n  const renderContent = (content: string) => {\n    // 简单的代码块识别和渲染\n    const codeBlockRegex = /```([a-z]*)\\n([\\s\\S]*?)```/g;\n    let lastIndex = 0;\n    const parts = [];\n    let match;\n\n    // 提取并处理代码块\n    while ((match = codeBlockRegex.exec(content)) !== null) {\n      // 添加代码块之前的文本\n      if (match.index > lastIndex) {\n        parts.push(\n          <span key={`text-${lastIndex}`} className=\"whitespace-pre-wrap\">\n            {content.substring(lastIndex, match.index)}\n          </span>\n        );\n      }\n\n      // 添加代码块\n      const language = match[1] || 'plaintext';\n      const code = match[2];\n      parts.push(\n        <div key={`code-${match.index}`} className=\"my-2 bg-gray-800 text-gray-200 p-3 rounded overflow-x-auto\">\n          <div className=\"text-xs text-gray-400 mb-1\">{language}</div>\n          <pre className=\"font-mono text-sm\">{code}</pre>\n        </div>\n      );\n\n      lastIndex = match.index + match[0].length;\n    }\n\n    // 添加最后一部分文本（如果有）\n    if (lastIndex < content.length) {\n      parts.push(\n        <span key={`text-${lastIndex}`} className=\"whitespace-pre-wrap\">\n          {content.substring(lastIndex)}\n        </span>\n      );\n    }\n\n    return parts.length > 0 ? parts : <span className=\"whitespace-pre-wrap\">{content}</span>;\n  };\n\n  return (\n    <div className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}>\n      <div className={`max-w-[80%] p-3 ${getBubbleStyle()}`}>\n        <div className=\"text-sm\">\n          {renderContent(message.content)}\n        </div>\n        <div className={`text-xs mt-1 ${message.role === 'user' ? 'text-blue-200' : 'text-gray-500'} text-right`}>\n          {formatTime(message.timestamp)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MessageBubble; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}