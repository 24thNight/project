{"ast":null,"code":"var _jsxFileName = \"/home/devbox/project/src/components/features/dashboard/new-plan-card.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLanguage } from '../../../lib/language-context';\nimport { Card } from '../../../components/ui/card';\nimport NewPlanDialog from './new-plan-dialog';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewPlanCard = ({\n  onPlanCreated\n}) => {\n  _s();\n  const {\n    t\n  } = useLanguage();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleOpenDialog = () => {\n    setIsDialogOpen(true);\n  };\n  const handleCloseDialog = () => {\n    // 仅设置对话框状态为关闭，不调用onPlanCreated\n    // 因为现在我们导航到clarify页面，而不是直接创建计划\n    setIsDialogOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"h-full flex flex-col items-center justify-center p-6 cursor-pointer border-dashed border-2 border-gray-300 hover:border-gray-400 transition-all duration-300 hover:shadow-md bg-white/50\",\n      onClick: handleOpenDialog,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-12 h-12 rounded-full bg-gray-100 flex items-center justify-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"text-gray-500\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 5V19M5 12H19\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 font-medium\",\n        children: t('dashboard.addNewPlan')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-400 mt-2 text-center\",\n        children: t('dashboard.clickToAdd')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewPlanDialog, {\n      isOpen: isDialogOpen,\n      onClose: handleCloseDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NewPlanCard, \"UCX6UJcF4lvq5Ifsx/NrMFvVlWU=\", false, function () {\n  return [useLanguage];\n});\n_c = NewPlanCard;\nexport default NewPlanCard;\nvar _c;\n$RefreshReg$(_c, \"NewPlanCard\");","map":{"version":3,"names":["React","useState","useLanguage","Card","NewPlanDialog","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPlanCard","onPlanCreated","_s","t","isDialogOpen","setIsDialogOpen","handleOpenDialog","handleCloseDialog","children","className","onClick","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","_c","$RefreshReg$"],"sources":["/home/devbox/project/src/components/features/dashboard/new-plan-card.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLanguage } from '../../../lib/language-context';\nimport { Card } from '../../../components/ui/card';\nimport NewPlanDialog from './new-plan-dialog';\n\ninterface NewPlanCardProps {\n  onPlanCreated: () => void;\n}\n\nconst NewPlanCard: React.FC<NewPlanCardProps> = ({ onPlanCreated }) => {\n  const { t } = useLanguage();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const handleOpenDialog = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleCloseDialog = () => {\n    // 仅设置对话框状态为关闭，不调用onPlanCreated\n    // 因为现在我们导航到clarify页面，而不是直接创建计划\n    setIsDialogOpen(false);\n  };\n\n  return (\n    <>\n      <Card \n        className=\"h-full flex flex-col items-center justify-center p-6 cursor-pointer border-dashed border-2 border-gray-300 hover:border-gray-400 transition-all duration-300 hover:shadow-md bg-white/50\"\n        onClick={handleOpenDialog}\n      >\n        <div className=\"w-12 h-12 rounded-full bg-gray-100 flex items-center justify-center mb-4\">\n          <svg \n            width=\"24\" \n            height=\"24\" \n            viewBox=\"0 0 24 24\" \n            fill=\"none\" \n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"text-gray-500\"\n          >\n            <path \n              d=\"M12 5V19M5 12H19\" \n              stroke=\"currentColor\" \n              strokeWidth=\"2\" \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </div>\n        <p className=\"text-gray-500 font-medium\">{t('dashboard.addNewPlan')}</p>\n        <p className=\"text-xs text-gray-400 mt-2 text-center\">{t('dashboard.clickToAdd')}</p>\n      </Card>\n\n      <NewPlanDialog\n        isOpen={isDialogOpen}\n        onClose={handleCloseDialog}\n      />\n    </>\n  );\n};\n\nexport default NewPlanCard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,IAAI,QAAQ,6BAA6B;AAClD,OAAOC,aAAa,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAM9C,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM;IAAEC;EAAE,CAAC,GAAGV,WAAW,CAAC,CAAC;EAC3B,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC7BD,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA;IACAF,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACH,IAAI;MACHe,SAAS,EAAC,0LAA0L;MACpMC,OAAO,EAAEJ,gBAAiB;MAAAE,QAAA,gBAE1BX,OAAA;QAAKY,SAAS,EAAC,0EAA0E;QAAAD,QAAA,eACvFX,OAAA;UACEc,KAAK,EAAC,IAAI;UACVC,MAAM,EAAC,IAAI;UACXC,OAAO,EAAC,WAAW;UACnBC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAC,4BAA4B;UAClCN,SAAS,EAAC,eAAe;UAAAD,QAAA,eAEzBX,OAAA;YACEmB,CAAC,EAAC,kBAAkB;YACpBC,MAAM,EAAC,cAAc;YACrBC,WAAW,EAAC,GAAG;YACfC,aAAa,EAAC,OAAO;YACrBC,cAAc,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACN3B,OAAA;QAAGY,SAAS,EAAC,2BAA2B;QAAAD,QAAA,EAAEL,CAAC,CAAC,sBAAsB;MAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxE3B,OAAA;QAAGY,SAAS,EAAC,wCAAwC;QAAAD,QAAA,EAAEL,CAAC,CAAC,sBAAsB;MAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC,eAEP3B,OAAA,CAACF,aAAa;MACZ8B,MAAM,EAAErB,YAAa;MACrBsB,OAAO,EAAEnB;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACtB,EAAA,CAhDIF,WAAuC;EAAA,QAC7BP,WAAW;AAAA;AAAAkC,EAAA,GADrB3B,WAAuC;AAkD7C,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}