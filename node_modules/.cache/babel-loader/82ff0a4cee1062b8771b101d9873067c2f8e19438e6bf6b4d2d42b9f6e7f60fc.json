{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useLocation,useNavigate,useSearchParams}from'react-router-dom';import{useLanguage}from'../lib/language-context';import{Button}from'../components/ui/button';import{toast}from'sonner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PlanPage=()=>{const{t,language}=useLanguage();const navigate=useNavigate();const location=useLocation();const[searchParams]=useSearchParams();const planId=searchParams.get('id');// 用于模拟计划数据的状态\nconst[planData,setPlanData]=useState(null);// 从location.state获取数据\nconst state=location.state;useEffect(()=>{console.log('计划页面已加载，planId:',planId);console.log('location.state:',state);// 如果有planId，从服务器获取计划数据\nif(planId){// 这里应该是真实的API调用，现在用模拟数据\nsetTimeout(()=>{setPlanData({title:`测试计划 ${planId}`,answers:[\"问题1的回答\",\"问题2的回答\",\"问题3的回答\"]});},500);}// 如果有state，使用state中的数据\nelse if(state&&state.taskTitle){setPlanData({title:state.taskTitle,answers:state.answers});}// 如果两者都没有，返回首页\nelse{toast.error('无法加载计划数据');navigate('/dashboard');}},[planId,state,navigate]);const handleBackToDashboard=()=>{navigate('/dashboard');};// 如果数据正在加载，显示加载状态\nif(!planData){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen zen-bg flex justify-center items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6 text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:t('api.tests.loading')}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-blue-500 animate-bounce\",style:{animationDelay:'0ms'}}),/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-blue-500 animate-bounce\",style:{animationDelay:'150ms'}}),/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-blue-500 animate-bounce\",style:{animationDelay:'300ms'}})]})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen zen-bg p-4 md:p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto bg-white rounded-lg shadow-md p-6 md:p-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl md:text-2xl font-bold mb-6\",children:language==='zh'?'您的计划已生成':'Your Plan is Ready'}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 p-4 bg-indigo-50 rounded-lg border border-indigo-100\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-base md:text-lg font-medium text-indigo-800 mb-2\",children:language==='zh'?'目标：':'Goal:'}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg md:text-xl\",children:planData.title}),planId&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 mt-2\",children:[\"Plan ID: \",planId]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium mb-4\",children:language==='zh'?'您提供的信息：':'Your Information:'}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 p-4 rounded-lg space-y-3\",children:planData.answers.map((answer,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium mr-2\",children:[index+1,\".\"]}),/*#__PURE__*/_jsx(\"p\",{children:answer})]},index))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:handleBackToDashboard,children:language==='zh'?'返回首页':'Back to Dashboard'})})]})});};export default PlanPage;","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","useSearchParams","useLanguage","Button","toast","jsx","_jsx","jsxs","_jsxs","PlanPage","t","language","navigate","location","searchParams","planId","get","planData","setPlanData","state","console","log","setTimeout","title","answers","taskTitle","error","handleBackToDashboard","className","children","style","animationDelay","map","answer","index","variant","onClick"],"sources":["/home/devbox/project/src/pages/plan-page.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport { useLanguage } from '../lib/language-context';\nimport { Button } from '../components/ui/button';\nimport { toast } from 'sonner';\n\ninterface LocationState {\n  taskTitle: string;\n  answers: string[];\n}\n\nconst PlanPage: React.FC = () => {\n  const { t, language } = useLanguage();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const planId = searchParams.get('id');\n  \n  // 用于模拟计划数据的状态\n  const [planData, setPlanData] = useState<{\n    title: string;\n    answers: string[];\n  } | null>(null);\n  \n  // 从location.state获取数据\n  const state = location.state as LocationState;\n  \n  useEffect(() => {\n    console.log('计划页面已加载，planId:', planId);\n    console.log('location.state:', state);\n    \n    // 如果有planId，从服务器获取计划数据\n    if (planId) {\n      // 这里应该是真实的API调用，现在用模拟数据\n      setTimeout(() => {\n        setPlanData({\n          title: `测试计划 ${planId}`,\n          answers: [\"问题1的回答\", \"问题2的回答\", \"问题3的回答\"]\n        });\n      }, 500);\n    } \n    // 如果有state，使用state中的数据\n    else if (state && state.taskTitle) {\n      setPlanData({\n        title: state.taskTitle,\n        answers: state.answers\n      });\n    }\n    // 如果两者都没有，返回首页\n    else {\n      toast.error('无法加载计划数据');\n      navigate('/dashboard');\n    }\n  }, [planId, state, navigate]);\n  \n  const handleBackToDashboard = () => {\n    navigate('/dashboard');\n  };\n  \n  // 如果数据正在加载，显示加载状态\n  if (!planData) {\n    return (\n      <div className=\"min-h-screen zen-bg flex justify-center items-center\">\n        <div className=\"bg-white rounded-lg shadow-md p-6 text-center\">\n          <h2 className=\"text-xl font-semibold mb-4\">{t('api.tests.loading')}</h2>\n          <div className=\"flex justify-center space-x-2\">\n            <div className=\"w-3 h-3 rounded-full bg-blue-500 animate-bounce\" style={{ animationDelay: '0ms' }} />\n            <div className=\"w-3 h-3 rounded-full bg-blue-500 animate-bounce\" style={{ animationDelay: '150ms' }} />\n            <div className=\"w-3 h-3 rounded-full bg-blue-500 animate-bounce\" style={{ animationDelay: '300ms' }} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen zen-bg p-4 md:p-6\">\n      <div className=\"max-w-4xl mx-auto bg-white rounded-lg shadow-md p-6 md:p-8\">\n        <h1 className=\"text-xl md:text-2xl font-bold mb-6\">\n          {language === 'zh' ? '您的计划已生成' : 'Your Plan is Ready'}\n        </h1>\n        \n        <div className=\"mb-8 p-4 bg-indigo-50 rounded-lg border border-indigo-100\">\n          <h2 className=\"text-base md:text-lg font-medium text-indigo-800 mb-2\">\n            {language === 'zh' ? '目标：' : 'Goal:'}\n          </h2>\n          <p className=\"text-lg md:text-xl\">{planData.title}</p>\n          {planId && (\n            <p className=\"text-sm text-gray-500 mt-2\">Plan ID: {planId}</p>\n          )}\n        </div>\n        \n        <div className=\"mb-8\">\n          <h2 className=\"text-lg font-medium mb-4\">\n            {language === 'zh' ? '您提供的信息：' : 'Your Information:'}\n          </h2>\n          <div className=\"bg-gray-50 p-4 rounded-lg space-y-3\">\n            {planData.answers.map((answer, index) => (\n              <div key={index} className=\"flex\">\n                <span className=\"font-medium mr-2\">{index + 1}.</span>\n                <p>{answer}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"flex justify-between\">\n          <Button \n            variant=\"outline\" \n            onClick={handleBackToDashboard}\n          >\n            {language === 'zh' ? '返回首页' : 'Back to Dashboard'}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlanPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}