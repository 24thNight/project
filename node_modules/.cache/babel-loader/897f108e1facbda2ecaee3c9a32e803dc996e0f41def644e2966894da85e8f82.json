{"ast":null,"code":"import React,{useState}from'react';import{planApi}from'../../../lib/api';import{useLanguage}from'../../../lib/language-context';import{Button}from'../../../components/ui/button';import{Card,CardContent,CardHeader,CardTitle}from'../../../components/ui/card';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ApiTest=()=>{const{t,language}=useLanguage();const[result,setResult]=useState('');const[loading,setLoading]=useState(false);const apiTests=[{name:t('api.tests.fetchPlans'),action:async()=>{setLoading(true);try{const plans=await planApi.fetchPlans(language);return JSON.stringify(plans,null,2);}catch(error){return`错误: ${error instanceof Error?error.message:String(error)}`;}finally{setLoading(false);}}},{name:t('api.tests.createPlan'),action:async()=>{setLoading(true);try{const newPlan=await planApi.createPlan({title:'测试计划 '+new Date().toLocaleTimeString(),description:'通过API创建的测试计划'},language);return JSON.stringify(newPlan,null,2);}catch(error){return`错误: ${error instanceof Error?error.message:String(error)}`;}finally{setLoading(false);}}},{name:t('api.tests.updatePlan'),action:async()=>{setLoading(true);try{// 先获取计划列表，然后更新第一个计划\nconst plans=await planApi.fetchPlans(language);if(plans.length===0){return'没有可更新的计划';}const plan=plans[0];const updatedPlan=await planApi.updatePlan(plan.id,{progress:Math.min(100,plan.progress+10)},language);return JSON.stringify(updatedPlan,null,2);}catch(error){return`错误: ${error instanceof Error?error.message:String(error)}`;}finally{setLoading(false);}}},{name:t('api.tests.deletePlan'),action:async()=>{setLoading(true);try{// 先获取计划列表，然后删除最后一个计划\nconst plans=await planApi.fetchPlans(language);if(plans.length===0){return'没有可更新的计划';}const plan=plans[plans.length-1];await planApi.deletePlan(plan.id,language);return`成功删除计划: ${plan.title}`;}catch(error){return`错误: ${error instanceof Error?error.message:String(error)}`;}finally{setLoading(false);}}}];const runTest=async test=>{const result=await test.action();setResult(result);};return/*#__PURE__*/_jsxs(Card,{className:\"max-w-4xl mx-auto mt-8\",children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{className:\"text-xl\",children:t('api.tests.title')})}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 gap-4 mb-6\",children:apiTests.map((test,index)=>/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:()=>runTest(test),disabled:loading,children:test.name},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium mb-2\",children:t('api.tests.result')}),/*#__PURE__*/_jsx(\"pre\",{className:\"p-4 bg-gray-50 rounded-md overflow-auto max-h-80 text-xs\",children:loading?t('api.tests.loading'):result||t('api.tests.clickToTest')})]})]})]});};export default ApiTest;","map":{"version":3,"names":["React","useState","planApi","useLanguage","Button","Card","CardContent","CardHeader","CardTitle","jsx","_jsx","jsxs","_jsxs","ApiTest","t","language","result","setResult","loading","setLoading","apiTests","name","action","plans","fetchPlans","JSON","stringify","error","Error","message","String","newPlan","createPlan","title","Date","toLocaleTimeString","description","length","plan","updatedPlan","updatePlan","id","progress","Math","min","deletePlan","runTest","test","className","children","map","index","variant","onClick","disabled"],"sources":["/home/devbox/project/src/components/features/dashboard/api-test.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { planApi } from '../../../lib/api';\nimport { useLanguage } from '../../../lib/language-context';\nimport { Button } from '../../../components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/card';\n\nconst ApiTest: React.FC = () => {\n  const { t, language } = useLanguage();\n  const [result, setResult] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const apiTests = [\n    {\n      name: t('api.tests.fetchPlans'),\n      action: async () => {\n        setLoading(true);\n        try {\n          const plans = await planApi.fetchPlans(language);\n          return JSON.stringify(plans, null, 2);\n        } catch (error) {\n          return `错误: ${error instanceof Error ? error.message : String(error)}`;\n        } finally {\n          setLoading(false);\n        }\n      }\n    },\n    {\n      name: t('api.tests.createPlan'),\n      action: async () => {\n        setLoading(true);\n        try {\n          const newPlan = await planApi.createPlan({\n            title: '测试计划 ' + new Date().toLocaleTimeString(),\n            description: '通过API创建的测试计划'\n          }, language);\n          return JSON.stringify(newPlan, null, 2);\n        } catch (error) {\n          return `错误: ${error instanceof Error ? error.message : String(error)}`;\n        } finally {\n          setLoading(false);\n        }\n      }\n    },\n    {\n      name: t('api.tests.updatePlan'),\n      action: async () => {\n        setLoading(true);\n        try {\n          // 先获取计划列表，然后更新第一个计划\n          const plans = await planApi.fetchPlans(language);\n          if (plans.length === 0) {\n            return '没有可更新的计划';\n          }\n          \n          const plan = plans[0];\n          const updatedPlan = await planApi.updatePlan(\n            plan.id, \n            { progress: Math.min(100, plan.progress + 10) },\n            language\n          );\n          \n          return JSON.stringify(updatedPlan, null, 2);\n        } catch (error) {\n          return `错误: ${error instanceof Error ? error.message : String(error)}`;\n        } finally {\n          setLoading(false);\n        }\n      }\n    },\n    {\n      name: t('api.tests.deletePlan'),\n      action: async () => {\n        setLoading(true);\n        try {\n          // 先获取计划列表，然后删除最后一个计划\n          const plans = await planApi.fetchPlans(language);\n          if (plans.length === 0) {\n            return '没有可更新的计划';\n          }\n          \n          const plan = plans[plans.length - 1];\n          await planApi.deletePlan(plan.id, language);\n          \n          return `成功删除计划: ${plan.title}`;\n        } catch (error) {\n          return `错误: ${error instanceof Error ? error.message : String(error)}`;\n        } finally {\n          setLoading(false);\n        }\n      }\n    }\n  ];\n\n  const runTest = async (test: typeof apiTests[0]) => {\n    const result = await test.action();\n    setResult(result);\n  };\n\n  return (\n    <Card className=\"max-w-4xl mx-auto mt-8\">\n      <CardHeader>\n        <CardTitle className=\"text-xl\">{t('api.tests.title')}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-2 gap-4 mb-6\">\n          {apiTests.map((test, index) => (\n            <Button\n              key={index}\n              variant=\"outline\"\n              onClick={() => runTest(test)}\n              disabled={loading}\n            >\n              {test.name}\n            </Button>\n          ))}\n        </div>\n\n        <div className=\"mt-4\">\n          <div className=\"text-sm font-medium mb-2\">{t('api.tests.result')}</div>\n          <pre className=\"p-4 bg-gray-50 rounded-md overflow-auto max-h-80 text-xs\">\n            {loading ? t('api.tests.loading') : result || t('api.tests.clickToTest')}\n          </pre>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ApiTest; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}